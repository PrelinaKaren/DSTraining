name: Build DSTraining

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86_64, arm64]
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: arm64
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: arm64

    steps:
    # 检出代码
    - name: Checkout code
      uses: actions/checkout@v3

    # 设置 CMake
    - name: Setup CMake
      uses: lukka/get-cmake@v3

    # 设置编译环境
    - name: Set up environment
      run: |
        case ${{ matrix.arch }} in
          x86_64)
            export CMAKE_FLAGS="-DCMAKE_SYSTEM_PROCESSOR=x86_64"
            ;;
          arm64)
            export CMAKE_FLAGS="-DCMAKE_SYSTEM_PROCESSOR=arm64"
            ;;
          *)
            echo "Unsupported architecture: ${{ matrix.arch }}"
            exit 1
            ;;
        esac

    # 运行 CMake 配置
    - name: Configure with CMake
      run: |
        cmake -S . -B build $CMAKE_FLAGS

    # 运行 CMake 构建
    - name: Build with CMake
      run: |
        cmake --build build --config Debug

    # 测试生成的二进制文件
    - name: Test the built executable
      run: |
        ./build/DSTraining --version || echo "Build Successful!"
